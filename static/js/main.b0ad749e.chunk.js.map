{"version":3,"sources":["Assets/Trollface.png","Components/Header/Header.js","Components/MemeGenerator/MemeGenerator.js","Components/App.js","index.js"],"names":["module","exports","Header","src","trollface_img","alt","MemeGenerator","props","handleSubmit","event","preventDefault","randomURL","state","allMemes","Math","floor","random","length","url","setState","randomImage","topText","bottomText","handleTextChange","target","name","value","textSize","fetch","then","response","json","memes","data","h2Style","this","console","log","className","type","onChange","min","max","style","onClick","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"0GAAAA,EAAOC,QAAU,IAA0B,uC,8NCiB5BC,MAZf,WACE,OACE,gCACI,yBACIC,IAAKC,IACLC,IAAI,eAER,gD,mCC4FOC,G,wDAnGX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAqBVC,aAAe,SAACC,GACZA,EAAMC,iBACN,IAAIC,EAAY,EAAKC,MAAMC,SAASC,KAAKC,MAAMD,KAAKE,SAAW,EAAKJ,MAAMC,SAASI,SAASC,IAC5F,EAAKC,SAAS,CACVC,YAAaT,EACbU,QAAS,GACTC,WAAY,MA5BD,EAgCnBC,iBAAmB,SAACd,GAAW,IAAD,EACJA,EAAMe,OAAtBC,EADoB,EACpBA,KAAMC,EADc,EACdA,MACZ,EAAKP,SAAL,eACKM,EAAOC,KAjCZ,EAAKd,MAAQ,CACTS,QAAS,GACTC,WAAY,GACZF,YAAa,gCACbP,SAAU,GACVc,SAAU,IAPC,E,qDAWnB,WAAqB,IAAD,OAChBC,MAAM,qCACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAa,IACPE,EAAUF,EAASG,KAAnBD,MACR,EAAKb,SAAS,CACVN,SAAUmB,S,oBAsB1B,WACI,IAAME,EAAU,CACZ,SAAYC,KAAKvB,MAAMe,SAAW,MAKtC,OAFAS,QAAQC,IAAIH,GAGR,yBAAKI,UAAU,kBACX,0BAAMA,UAAU,aACZ,+BACI,2BACIC,KAAK,OACLd,KAAK,UACLC,MAAOS,KAAKvB,MAAMS,QAClBmB,SAAUL,KAAKZ,mBAEnB,wCAGJ,+BACI,2BACIgB,KAAK,OACLd,KAAK,aACLC,MAAOS,KAAKvB,MAAMU,WAClBkB,SAAUL,KAAKZ,mBAEnB,2CAGJ,+BACI,2BACIgB,KAAK,QACLE,IAAI,KACJC,IAAI,MACJJ,UAAU,SACVb,KAAK,WACLC,MAAOS,KAAKvB,MAAMe,SAClBa,SAAUL,KAAKZ,mBAEnB,yBAAKe,UAAU,gBACX,uBAAGA,UAAU,OAAb,MACA,uBAAGA,UAAU,OAAb,UAKZ,yBAAKA,UAAU,QACX,yBAAKA,UAAU,iBACX,yBAAKnC,IAAKgC,KAAKvB,MAAMQ,YAAaf,IAAI,KACtC,wBAAIiC,UAAU,MAAMK,MAAOT,GAAUC,KAAKvB,MAAMS,SAChD,wBAAIiB,UAAU,SAASK,MAAOT,GAAUC,KAAKvB,MAAMU,aAEvD,yBAAKgB,UAAU,SAASM,QAAST,KAAK3B,cAAtC,gB,GA9FQqC,IAAMC,YCYnBC,MATf,WACE,OACE,yBAAKT,UAAU,OACb,kBAAE,EAAF,MACA,kBAAE,EAAF,QCLNU,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.b0ad749e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Trollface.be324d5b.png\";","import React from 'react';\r\nimport './Header.css';\r\n\r\nimport trollface_img from \"../../Assets/Trollface.png\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n        <img \r\n            src={trollface_img}\r\n            alt=\"Problem???\"\r\n        />\r\n        <p>Meme Generator!</p>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './MemeGenerator.css';\r\n\r\nclass MemeGenerator extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            topText: \"\",\r\n            bottomText: \"\",\r\n            randomImage: \"http://i.imgflip.com/1bij.jpg\",\r\n            allMemes: [],\r\n            textSize: 40\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://api.imgflip.com/get_memes')\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                const { memes } = response.data\r\n                this.setState({\r\n                    allMemes: memes\r\n                })\r\n            });\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        var randomURL = this.state.allMemes[Math.floor(Math.random() * this.state.allMemes.length)].url;\r\n        this.setState({\r\n            randomImage: randomURL,\r\n            topText: \"\",\r\n            bottomText: \"\"\r\n        })\r\n    }\r\n\r\n    handleTextChange = (event) => {\r\n        var { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const h2Style = {\r\n            'fontSize': this.state.textSize + 'px'\r\n        }\r\n\r\n        console.log(h2Style)\r\n\r\n        return (\r\n            <div className=\"meme-generator\">\r\n                <form className=\"meme-form\">\r\n                    <label>\r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"topText\" \r\n                            value={this.state.topText} \r\n                            onChange={this.handleTextChange}\r\n                        />\r\n                        <p>Top Text</p>\r\n                    </label>\r\n                    \r\n                    <label>\r\n                        <input \r\n                            type=\"text\"\r\n                            name=\"bottomText\" \r\n                            value={this.state.bottomText} \r\n                            onChange={this.handleTextChange}\r\n                        />\r\n                        <p>Bottom Text</p>\r\n                    </label>\r\n\r\n                    <label>\r\n                        <input\r\n                            type=\"range\"\r\n                            min=\"20\"\r\n                            max=\"100\"\r\n                            className=\"slider\"\r\n                            name=\"textSize\"\r\n                            value={this.state.textSize}\r\n                            onChange={this.handleTextChange}\r\n                        />\r\n                        <div className=\"range-labels\">\r\n                            <p className=\"min\">20</p>\r\n                            <p className=\"max\">100</p>\r\n                        </div>\r\n                    </label>\r\n                </form>\r\n\r\n                <div className=\"meme\">\r\n                    <div className=\"img-container\">\r\n                        <img src={this.state.randomImage} alt=\"\" />\r\n                        <h2 className=\"top\" style={h2Style}>{this.state.topText}</h2>\r\n                        <h2 className=\"bottom\" style={h2Style}>{this.state.bottomText}</h2>\r\n                    </div>\r\n                    <div className=\"button\" onClick={this.handleSubmit}>Random</div>\r\n                </div>\r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\nexport default MemeGenerator;","import React from 'react';\r\nimport './App.css';\r\n\r\nimport Header from './Header/Header';\r\nimport MemeGenerator from './MemeGenerator/MemeGenerator'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      < Header />\r\n      < MemeGenerator />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}